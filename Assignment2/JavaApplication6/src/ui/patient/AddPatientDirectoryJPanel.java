/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.patient;

import ui.person.*;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import model.person.City;
import model.person.Community;
import model.person.House;
import model.person.Person;
import model.person.PersonDirectory;
import model.patient.Patient;
import model.patient.PatientDirectory;

/**
 *
 * @author dhairyasheel
 */
public class AddPatientDirectoryJPanel extends javax.swing.JPanel {

    /**
     * Creates new form PersonDirectoryJPanel
     */
     JPanel mainWorkArea;
     PersonDirectory personDirectory;
     private PatientDirectory patientDirectory;
     City city;
     Community community;
     List<Person> personList;
     House house;
     
    public AddPatientDirectoryJPanel(JPanel mainWorkArea, PersonDirectory personDirectory, PatientDirectory patientDirectory) {
         initComponents();
        this.mainWorkArea = mainWorkArea;
        this.personDirectory = personDirectory;
        this.patientDirectory = patientDirectory;
        personList = personDirectory.getPersonList();
        populateCombo();
        refreshTable();
    }


    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SplitPane = new javax.swing.JSplitPane();
        personDirPanel = new javax.swing.JPanel();
        lblTitle = new javax.swing.JLabel();
        communityJC = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPerson = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();
        btnViewPer = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        personPanel = new javax.swing.JPanel();

        SplitPane.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        personDirPanel.setBackground(new java.awt.Color(254, 254, 254));

        lblTitle.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(109, 144, 149));
        lblTitle.setText("Global Person Directory");

        communityJC.setBackground(new java.awt.Color(254, 254, 254));
        communityJC.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        communityJC.setForeground(new java.awt.Color(120, 149, 162));
        communityJC.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        communityJC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                communityJCActionPerformed(evt);
            }
        });

        tblPerson.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        tblPerson.setForeground(new java.awt.Color(100, 149, 162));
        tblPerson.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Person ID", "Name", "Date of Birth", "Community"
            }
        ));
        tblPerson.setGridColor(new java.awt.Color(136, 168, 179));
        tblPerson.setSelectionForeground(new java.awt.Color(100, 149, 162));
        jScrollPane1.setViewportView(tblPerson);

        btnBack.setBackground(new java.awt.Color(254, 254, 254));
        btnBack.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        btnBack.setForeground(new java.awt.Color(100, 149, 162));
        btnBack.setText("Back");
        btnBack.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnViewPer.setBackground(new java.awt.Color(254, 254, 254));
        btnViewPer.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        btnViewPer.setForeground(new java.awt.Color(100, 149, 162));
        btnViewPer.setText("View");
        btnViewPer.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnViewPer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewPerActionPerformed(evt);
            }
        });

        btnAdd.setBackground(new java.awt.Color(254, 254, 254));
        btnAdd.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        btnAdd.setForeground(new java.awt.Color(100, 149, 162));
        btnAdd.setText("Add");
        btnAdd.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout personDirPanelLayout = new javax.swing.GroupLayout(personDirPanel);
        personDirPanel.setLayout(personDirPanelLayout);
        personDirPanelLayout.setHorizontalGroup(
            personDirPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(personDirPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(personDirPanelLayout.createSequentialGroup()
                .addGroup(personDirPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(personDirPanelLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 589, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(personDirPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(communityJC, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(personDirPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnViewPer, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(81, Short.MAX_VALUE))
        );
        personDirPanelLayout.setVerticalGroup(
            personDirPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(personDirPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitle)
                .addGroup(personDirPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(personDirPanelLayout.createSequentialGroup()
                        .addGap(18, 25, Short.MAX_VALUE)
                        .addComponent(communityJC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(personDirPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(personDirPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(personDirPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, personDirPanelLayout.createSequentialGroup()
                        .addComponent(btnViewPer, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23))))
        );

        SplitPane.setTopComponent(personDirPanel);

        personPanel.setBackground(new java.awt.Color(254, 254, 254));

        javax.swing.GroupLayout personPanelLayout = new javax.swing.GroupLayout(personPanel);
        personPanel.setLayout(personPanelLayout);
        personPanelLayout.setHorizontalGroup(
            personPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 817, Short.MAX_VALUE)
        );
        personPanelLayout.setVerticalGroup(
            personPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 361, Short.MAX_VALUE)
        );

        SplitPane.setRightComponent(personPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(SplitPane)
                .addGap(42, 42, 42))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(SplitPane)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnViewPerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewPerActionPerformed
        int row = tblPerson.getSelectedRow();
        if(row<0) {
            JOptionPane.showMessageDialog(null, "Please select a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        Person c = (Person)tblPerson.getValueAt(row, 0);
        
        ViewPerson viewPerson = new ViewPerson(mainWorkArea,c);
        SplitPane.setBottomComponent(viewPerson);
    }//GEN-LAST:event_btnViewPerActionPerformed

    private void communityJCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_communityJCActionPerformed
        // TODO add your handling code here:
        refreshTable();
    }//GEN-LAST:event_communityJCActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        backMethod();
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        int row = tblPerson.getSelectedRow();
        if(row<0) {
            JOptionPane.showMessageDialog(null, "Please select a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        Patient patient = patientDirectory.addPatient();
        patient.setPatient((Person)tblPerson.getValueAt(row, 0));
        backMethod();
    }//GEN-LAST:event_btnAddActionPerformed

   public void refreshTable() {
        String selectedSupplier = (String) communityJC.getSelectedItem();
        if("All Communities".equals(selectedSupplier)){
            DefaultTableModel model = (DefaultTableModel)tblPerson.getModel();
            model.setRowCount(0);
            for(Person p: personDirectory.getPersonList()) {
                Object row[] = new Object[4];
                row[0] = p;
                row[1] = p.getName();
                row[2] = p.getDate();
                row[3] = p.getAddress().getCommunity();
               // row[1] = s.getProductCatalog().getProductCount() == 0 ? "None" : s.getProductCatalog().getProductCount();
                model.addRow(row);
            }
        } else {
            DefaultTableModel model = (DefaultTableModel)tblPerson.getModel();
            model.setRowCount(0);
            for(Person p: personDirectory.getPersonList()) {
                if(p.getAddress().getCommunity().equals(selectedSupplier)){
                    Object row[] = new Object[4];
                    row[0] = p;
                    row[1] = p.getName();
                    row[2] = p.getDate();
                    row[3] = p.getAddress().getCommunity();
                   // row[1] = s.getProductCatalog().getProductCount() == 0 ? "None" : s.getProductCatalog().getProductCount();
                    model.addRow(row);
                } 
                
            }
        }
    }

    public void populateCombo() {
        communityJC.removeAllItems();
        communityJC.addItem("All Communities");

        List<String> sorted = new ArrayList<>();
        for(Person s: personList){
            if(!sorted.contains(s.getAddress().getCommunity())){
                sorted.add(s.getAddress().getCommunity());
            }
        }
       for(String s: sorted){
           communityJC.addItem(s);
        }
       refreshTable();
    }

    private void backMethod(){
       mainWorkArea.remove(this);
        Component[] componentArray = mainWorkArea.getComponents();
        Component component = componentArray[componentArray.length - 1];
        PatientDirectoryJPanel patientDirectoryJPanel = (PatientDirectoryJPanel) component;
        patientDirectoryJPanel.populateCombo();
        patientDirectoryJPanel.refreshTable();
        patientDirectoryJPanel.populateBP();
        CardLayout layout = (CardLayout) mainWorkArea.getLayout();
        layout.previous(mainWorkArea);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSplitPane SplitPane;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnViewPer;
    private javax.swing.JComboBox<String> communityJC;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JPanel personDirPanel;
    private javax.swing.JPanel personPanel;
    private javax.swing.JTable tblPerson;
    // End of variables declaration//GEN-END:variables

}
